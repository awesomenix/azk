apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: azk-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: clusters.engine.azk.io
spec:
  group: engine.azk.io
  names:
    kind: Cluster
    plural: clusters
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Cluster is the Schema for the clusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterSpec defines the desired state of Cluster
          properties:
            adminKubeConfig:
              type: string
            azureCloudProviderConfig:
              type: string
            bootstrapKubernetesVersion:
              type: string
            bootstrapVMSKUType:
              type: string
            caCertificate:
              type: string
            caCertificateKey:
              type: string
            clientID:
              type: string
            clientSecret:
              type: string
            cloud:
              type: string
            clusterName:
              type: string
            customerKubeConfig:
              type: string
            discoveryHashes:
              items:
                type: string
              type: array
            dnsPrefix:
              type: string
            etcdCACertificate:
              type: string
            etcdCACertificateKey:
              type: string
            frontProxyCACertificate:
              type: string
            frontProxyCACertificateKey:
              type: string
            groupLocation:
              type: string
            groupName:
              type: string
            internalDNSName:
              type: string
            publicDNSName:
              type: string
            publicIPAddress:
              type: string
            serviceAccountKey:
              type: string
            serviceAccountPub:
              type: string
            subscriptionID:
              type: string
            tenantID:
              type: string
            userAgent:
              type: string
          type: object
        status:
          description: ClusterStatus defines the observed state of Cluster
          properties:
            provisioningState:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: controlplanes.engine.azk.io
spec:
  group: engine.azk.io
  names:
    kind: ControlPlane
    plural: controlplanes
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ControlPlane is the Schema for the controlplanes API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ControlPlaneSpec defines the desired state of ControlPlane
          properties:
            kubernetesVersion:
              type: string
            vmSKUType:
              type: string
          type: object
        status:
          description: ControlPlaneStatus defines the observed state of ControlPlane
          properties:
            kubernetesVersion:
              type: string
            nodeStatus:
              items:
                properties:
                  vmComputerName:
                    type: string
                  vmInstanceID:
                    type: string
                type: object
              type: array
            provisioningState:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: nodepools.engine.azk.io
spec:
  group: engine.azk.io
  names:
    kind: NodePool
    plural: nodepools
  scope: ""
  subresources:
    scale:
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      description: NodePool is the Schema for the nodepools API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NodePoolSpec defines the desired state of NodePool
          properties:
            kubernetesVersion:
              type: string
            replicas:
              format: int32
              type: integer
            vmSKUType:
              type: string
          type: object
        status:
          description: NodePoolStatus defines the observed state of NodePool
          properties:
            kubeConfig:
              type: string
            kubernetesVersion:
              type: string
            nodeStatus:
              items:
                properties:
                  vmComputerName:
                    type: string
                  vmInstanceID:
                    type: string
                type: object
              type: array
            nodesetName:
              type: string
            provisioningState:
              type: string
            replicas:
              format: int32
              type: integer
            vmreplicas:
              format: int32
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: nodesets.engine.azk.io
spec:
  group: engine.azk.io
  names:
    kind: NodeSet
    plural: nodesets
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: NodeSet is the Schema for the nodesets API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NodeSetSpec defines the desired state of NodeSet
          properties:
            kubernetesVersion:
              type: string
            replicas:
              format: int32
              type: integer
            vmSKUType:
              type: string
          type: object
        status:
          description: NodeSetStatus defines the observed state of NodeSet
          properties:
            kubeConfig:
              type: string
            kubernetesVersion:
              type: string
            nodeStatus:
              items:
                properties:
                  vmComputerName:
                    type: string
                  vmInstanceID:
                    type: string
                type: object
              type: array
            provisioningState:
              type: string
            replicas:
              format: int32
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: azk-leader-election-role
  namespace: azk-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: azk-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - engine.azk.io
  resources:
  - clusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - engine.azk.io
  resources:
  - clusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - engine.azk.io
  resources:
  - controlplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - engine.azk.io
  resources:
  - controlplanes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - engine.azk.io
  resources:
  - nodepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - engine.azk.io
  resources:
  - nodepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - engine.azk.io
  resources:
  - nodesets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - engine.azk.io
  resources:
  - nodesets/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: azk-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: azk-leader-election-rolebinding
  namespace: azk-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: azk-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azk-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azk-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azk-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azk-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azk-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azk-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azk-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
  name: azk-controller-manager-metrics-service
  namespace: azk-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: azk-controller-manager
  namespace: azk-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: control-plane
                operator: In
                values:
                - controller-manager
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: quay.io/awesomenix/azk-manager:latest
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 300Mi
          requests:
            cpu: 300m
            memory: 200Mi
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
